{
    "project": {},
    "files": {
        "background/annotations.js": {
            "name": "background/annotations.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "EEXCESS.annotation": 1
            }
        },
        "background/apiCalls.js": {
            "name": "background/apiCalls.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "background/corpus.js": {
            "name": "background/corpus.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "EEXCESS.corpus": 1
            }
        },
        "background/corpus_webWorker.js": {
            "name": "background/corpus_webWorker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "background/logging.js": {
            "name": "background/logging.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "EEXCESS.logging": 1,
                "EEXCESS.logging.history": 1
            }
        },
        "background/model.js": {
            "name": "background/model.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "EEXCESS.model": 1
            }
        },
        "background/uuid.js": {
            "name": "background/uuid.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "common_js/browser_specific.js": {
            "name": "common_js/browser_specific.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "common_js/searchResultList.js": {
            "name": "common_js/searchResultList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "common_js/storage.js": {
            "name": "common_js/storage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/flat_ui/js/bootstrap.min.js": {
            "name": "libs/flat_ui/js/bootstrap.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/flat_ui/js/jquery.stacktable.js": {
            "name": "libs/flat_ui/js/jquery.stacktable.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "libs/clipper_unminified.js": {
            "name": "libs/clipper_unminified.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "privacy/common.js": {
            "name": "privacy/common.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/constants.js": {
            "name": "privacy/constants.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/interests.js": {
            "name": "privacy/interests.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.interests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/languages.js": {
            "name": "privacy/languages.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.languages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/obfuscation.js": {
            "name": "privacy/obfuscation.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.obfuscation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/policy.js": {
            "name": "privacy/policy.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.policy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/profile.js": {
            "name": "privacy/profile.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.profile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/storage.js": {
            "name": "privacy/storage.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.storage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "privacy/util-html.js": {
            "name": "privacy/util-html.js",
            "modules": {},
            "classes": {
                "EEXCESS.model.util-html": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "visualizations/FacetScape/lib/jquery-2.0.3.js": {
            "name": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/Barchart/barchart.js": {
            "name": "visualizations/Vis-Template/Barchart/barchart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/Geochart/geochart.js": {
            "name": "visualizations/Vis-Template/Geochart/geochart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/Timeline/js/geometry.js": {
            "name": "visualizations/Vis-Template/Timeline/js/geometry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/Timeline/timeline.js": {
            "name": "visualizations/Vis-Template/Timeline/timeline.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/js/accordion-and-dropdown.js": {
            "name": "visualizations/Vis-Template/js/accordion-and-dropdown.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/js/colorpicker.js": {
            "name": "visualizations/Vis-Template/js/colorpicker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/js/settings.js": {
            "name": "visualizations/Vis-Template/js/settings.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/js/utils.js": {
            "name": "visualizations/Vis-Template/js/utils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/starter.js": {
            "name": "visualizations/Vis-Template/starter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/Vis-Template/vis.js": {
            "name": "visualizations/Vis-Template/vis.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "visualizations/bookmarkingAPI.js": {
            "name": "visualizations/bookmarkingAPI.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "widget/widget.js": {
            "name": "widget/widget.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "content.js": {
            "name": "content.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "EEXCESS.model.common": {
            "name": "EEXCESS.model.common",
            "shortname": "common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/common.js",
            "line": 1,
            "description": "Provides methods to initialize, retrieve or display elements."
        },
        "EEXCESS.model.constants": {
            "name": "EEXCESS.model.constants",
            "shortname": "constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/constants.js",
            "line": 1,
            "description": "Defines all the constants used in the module profile."
        },
        "EEXCESS.model.interests": {
            "name": "EEXCESS.model.interests",
            "shortname": "interests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/interests.js",
            "line": 1,
            "description": "Provides methods to manage the interests."
        },
        "EEXCESS.model.languages": {
            "name": "EEXCESS.model.languages",
            "shortname": "languages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/languages.js",
            "line": 1,
            "description": "Provides methods to manage the languages."
        },
        "EEXCESS.model.obfuscation": {
            "name": "EEXCESS.model.obfuscation",
            "shortname": "obfuscation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/obfuscation.js",
            "line": 1,
            "description": "Provides methods that implements obfuscation and filtering mechanisms."
        },
        "EEXCESS.model.policy": {
            "name": "EEXCESS.model.policy",
            "shortname": "policy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/policy.js",
            "line": 1,
            "description": "Provides methods to manage policy privacy."
        },
        "EEXCESS.model.profile": {
            "name": "EEXCESS.model.profile",
            "shortname": "profile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/profile.js",
            "line": 1,
            "description": "Provides ... TODO"
        },
        "EEXCESS.model.storage": {
            "name": "EEXCESS.model.storage",
            "shortname": "storage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/storage.js",
            "line": 1,
            "description": "Provides methods to manage the storage of data."
        },
        "EEXCESS.model.util-html": {
            "name": "EEXCESS.model.util-html",
            "shortname": "util-html",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "EEXCESS.model",
            "file": "privacy/util-html.js",
            "line": 1,
            "description": "Provides methods handle HTML element/code."
        }
    },
    "classitems": [
        {
            "file": "background/annotations.js",
            "line": 7,
            "description": "This function encapsulates variables and functions for storing and retrieving\nannotations.",
            "type": "{Object}",
            "return": {
                "description": "Returns a set of functions to store and retrieve annotations",
                "type": "Object"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/annotations.js",
            "line": 16,
            "description": "Creates an annotation in json-ld format, representing a rating of\nthe provided resource with the given score and stores it in the database.\nIf a rating for this resource with the same context is already present in the database, its score will be updated.",
            "memberof": "EEXCESS.annotation",
            "params": [
                {
                    "name": "resource",
                    "description": "URI of the resource to rate",
                    "type": "String"
                },
                {
                    "name": "score",
                    "description": "The rating's score",
                    "type": "Integer"
                },
                {
                    "name": "context",
                    "description": "The context of the score assignment (a \nresource may be rated positive when provided as result to a certain \nquery, but negative in the context of another query)",
                    "type": "Object"
                },
                {
                    "name": "beenRecommended",
                    "description": "Flag for indicating if the resource was recommended by the EEXCESS framework",
                    "type": "Boolean"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/annotations.js",
            "line": 62,
            "description": "Retrieves the rating score of a resource from the database.",
            "memberof": "EEXCESS.annotation",
            "params": [
                {
                    "name": "uri",
                    "description": "The resource for which to retrieve a score",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "A context for which to retrieve ratings",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Function to call with the retrieved rating score",
                    "type": "RatingScoreCallback"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/apiCalls.js",
            "line": 1,
            "description": "Extend the String object with a 'startsWith' method",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/apiCalls.js",
            "line": 5,
            "description": "Checks, if a string-object starts with the provided term",
            "global": "",
            "params": [
                {
                    "name": "str",
                    "description": "the term to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true, if the string starts with the provided term, otherwise false",
                "type": "Boolean"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/apiCalls.js",
            "line": 20,
            "description": "Sends a query with the specified parameters to europeana and hands the results\nto the success callback or the error message to the error callback.",
            "memberof": "EEXCESS",
            "params": [
                {
                    "name": "queryData",
                    "description": "data containing the weighted query terms in queryData['terms'] and the reason for the query in queryData['reason']. The function accepts only a list of weighted query terms as well.",
                    "type": "Object"
                },
                {
                    "name": "start",
                    "description": "Item in the results to start with (first item is 1)",
                    "type": "Integer"
                },
                {
                    "name": "success",
                    "description": "callback on success, receives the retrieved results as parameter",
                    "type": "QuerySuccess"
                },
                {
                    "name": "error",
                    "description": "callback on error, receives the error message as parameter",
                    "type": "QueryError"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/apiCalls.js",
            "line": 113,
            "description": "Sends a query with the specified parameters to an API-endpoint",
            "params": [
                {
                    "name": "queryData",
                    "description": "either the weighted query terms directly or containing the weighted query terms in \"terms\" and a reason for the query in \"reason\"",
                    "type": "Object"
                },
                {
                    "name": "start",
                    "description": "pagination index to start with in the result list",
                    "type": "Integer"
                },
                {
                    "name": "success",
                    "description": "success callback, receives the retrieved results as parameter",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "error callback, receives the error message as parameter",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.annotation"
        },
        {
            "file": "background/corpus.js",
            "line": 3,
            "description": "Encapsulates functionality for invoking a web worker, in order to create a corpus of terms from an array of text passages",
            "type": "{Object}",
            "return": {
                "description": "Returns a set of functions for obtaining a corpus",
                "type": "Object"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 3,
            "description": "Represents a token.\n\nBy default, the type is set to 'w', if no type is provided. This corresponds\nto a regular word.",
            "params": [
                {
                    "name": "token",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 19,
            "description": "Returns an array of stopwords for the provided language if the specified\nlanguage is supported.\n\nCurrently, only english and german are supported",
            "params": [
                {
                    "name": "language",
                    "description": "country code of provided language",
                    "type": "String"
                }
            ],
            "return": {
                "description": "array of stopwords",
                "type": "Array"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 76,
            "description": "Creates a token out of the provided text.\nRemoves leading/trailing whitespaces and special characters.\nTokens, consisting of a single character after this process are discarded.\nFor urls, tokens with the type 'u' are created and for email-adresses,\ntokens with the type 'e' respectively.",
            "params": [
                {
                    "name": "text",
                    "description": "the text from which to create the token",
                    "type": "String"
                },
                {
                    "name": "parent",
                    "description": "the parent element of the text",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the created token",
                "type": "EEXCESS.Token"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 110,
            "description": "Tokenizes the provided text",
            "params": [
                {
                    "name": "text",
                    "description": "the text to tokenize",
                    "type": "String"
                },
                {
                    "name": "parent",
                    "description": "the parent element of the text",
                    "type": "String"
                },
                {
                    "name": "language",
                    "description": "country code of the text's language",
                    "type": "String"
                }
            ],
            "return": {
                "description": "tokenized text",
                "type": "Array"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 146,
            "description": "Represents a corpus of tokens",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 152,
            "description": "Function updates the amount of tokens belonging to the provided parent\n\nIf no entry exists for the token in the corpus, a new entry is created along \nwith the corresponding parent entry. If the token is present, but the parent\nentry not, the latter is added. Otherwise, the amount of tokens corresponding\nto the given parent entry is incremented by 1. In all cases, the overall \namount of occurrences of the provided token is incremented by 1.",
            "params": [
                {
                    "name": "token",
                    "description": "the token for which to increment the amount",
                    "type": "String"
                },
                {
                    "name": "parent",
                    "description": "the token's parent for which to increment the amount",
                    "type": "String"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/corpus_webWorker.js",
            "line": 177,
            "description": "Builds a corpus of tokens from the given elements",
            "params": [
                {
                    "name": "elements",
                    "description": "the elements to tokenize (each entry in the array\nmust be an object with structure {text:String,parent:String}",
                    "type": "Array"
                },
                {
                    "name": "language",
                    "description": "country code for language",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "callback function to trigger after calculation is\nfinished. The corpus is passed to this function as an argument.",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/logging.js",
            "line": 1,
            "description": "Extend the String object with a 'startsWith' method",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/logging.js",
            "line": 5,
            "description": "Checks, if a string-object starts with the provided term",
            "global": "",
            "params": [
                {
                    "name": "str",
                    "description": "the term to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true, if the string starts with the provided term, otherwise false",
                "type": "Boolean"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.corpus"
        },
        {
            "file": "background/logging.js",
            "line": 18,
            "description": "Encapsulates functionality for logging user actions.",
            "type": "{Object}",
            "return": {
                "description": "Returns a set of functions for logging user actions",
                "type": "Object"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 26,
            "description": "Stores recommendations which were retrieved from a partner's datastore\ninto the database along with the context, in which the items were recommended",
            "memberof": "EEXCESS.logging",
            "params": [
                {
                    "name": "recommendations",
                    "description": "Recommendations as returned by a query on a partner's datastore",
                    "type": "Array.<Recommendation>"
                },
                {
                    "name": "context",
                    "description": "The context in which the recommendations were provided (can e.g. contain a query term)",
                    "type": "Object"
                },
                {
                    "name": "timestamp",
                    "description": "The timestamp, when the recommendations were retrieved",
                    "type": "Long"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 37,
            "description": "Stores the term of a user-initiated query in the database along with its context.\nIf the user selected a piece of text for example, this is assumed to be the context.",
            "memberof": "EEXCESS.logging",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the query was executed in",
                    "type": "Integer"
                },
                {
                    "name": "query",
                    "description": "The query",
                    "type": "String"
                },
                {
                    "name": "timestamp",
                    "description": "The timestamp, when the recommendations were retrieved",
                    "type": "Long"
                },
                {
                    "name": "suffix",
                    "description": "suffix for the object store name",
                    "type": "String"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 47,
            "description": "request the context from the browsertab, the query was sent and\nexecute database transaction on callback",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 65,
            "description": "Stores the user interaction of starting to view a recommended resource",
            "memberof": "EEXCESS.logging",
            "params": [
                {
                    "name": "resource",
                    "description": "URI of the viewed resource",
                    "type": "String"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 90,
            "description": "Logs the duration of a user viewing a recommended resource on closing its view",
            "memberof": "EEXCESS.logging",
            "params": [
                {
                    "name": "resource",
                    "description": "URI of the viewed resource",
                    "type": "String"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging"
        },
        {
            "file": "background/logging.js",
            "line": 111,
            "description": "Encapsulates functionality for logging history events",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging.history"
        },
        {
            "file": "background/logging.js",
            "line": 130,
            "description": "Sets the variable 'current' to the current visit with the current point of\ntime as starting timestamp. If the variable already contained another visit, the\ncontained visit is stored to the database with the current point of time\nas ending timestamp. If the current url is the same as in the 'current'-\nvariable, the content of this variable remains unchanged.",
            "memberof": "EEXCESS.logging.history",
            "params": [
                {
                    "name": "url",
                    "description": "The url of the current visit",
                    "type": "String"
                },
                {
                    "name": "windowId",
                    "description": "Identifier of the current window",
                    "type": "Integer"
                },
                {
                    "name": "tabId",
                    "description": "Identifier of the current browsertab",
                    "type": "Integer"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging.history"
        },
        {
            "file": "background/logging.js",
            "line": 157,
            "description": "Adds additional information to a visit and stores it in the database.\nThe information added covers:\n- transition (as obtained by chrome API)\n- chrome_visitId (a corresponding identifier in chrome's history)\n- referrer (url of the referrer, may be empty)",
            "memberof": "EEXCESS.logging.history",
            "params": [
                {
                    "name": "item",
                    "description": "A visit item",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "The visit's url",
                            "type": "String"
                        },
                        {
                            "name": "start",
                            "description": "Start of the visit in milliseconds from the epoch",
                            "type": "Number"
                        },
                        {
                            "name": "end",
                            "description": "End of the visit in milliseconds from the epoch",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.logging.history"
        },
        {
            "file": "background/model.js",
            "line": 3,
            "description": "Encapsulates functionality for the model of the eexcess widget",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 32,
            "description": "Represents the current query and according results",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 123,
            "description": "Update results to a query with ratings from the database and send each\nupdated result to all tabs",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "items",
                    "description": "The results, for which to retrieve \nratings",
                    "type": "Array.<Recommendation>"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 174,
            "description": "Toggles the visibility of the widget",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "tabID",
                    "description": "identifier of the tab, the toggling request originates",
                    "type": "Integer"
                },
                {
                    "name": "url",
                    "description": "the url of the current page",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if visible, otherwise false",
                "type": "Boolean"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 201,
            "description": "Executes the following functions:\n- log the query\n- set widget's tab to 'results'\n- query API-endpoint\nAfter a successful query to the endpoint, the obtained results will be\nlogged in the database and enriched with ratings from the database.\nFurthermore they are set as the current results in the widget's model.\nAt logging the recommendations, query is added as context.",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the request \noriginated",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The query data",
                    "type": "Object"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 306,
            "description": "Sends the current model state to the specified callback",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the request \noriginated",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "not used",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 317,
            "description": "Sends the current visibility state of the widget to the specified \ncallback",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the request \noriginated",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "not used",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 329,
            "description": "Sets the rating score of a resource in the resultlist to the \nspecified value, stores the rating and informs all other tabs.\nThe query  is added to the rating as context.",
            "memberof": "EEXCESS.model",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the request \noriginated",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "rating of the resource",
                    "type": "Object",
                    "props": [
                        {
                            "name": "uri",
                            "description": "URI of the rated resource",
                            "type": "String"
                        },
                        {
                            "name": "score",
                            "description": "Score of the rating",
                            "type": "Integer"
                        },
                        {
                            "name": "pos",
                            "description": "Position of the resource in the resultlist",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 350,
            "description": "Returns the model's current context. The context contains the current\nquery (if any)",
            "memberof": "EEXCESS.model",
            "return": {
                "description": "the context",
                "type": "Object"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/model.js",
            "line": 363,
            "description": "Hands in the current query and corresponding results to the specified callback",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the browsertab, the request \noriginated",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "unused",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "background/uuid.js",
            "line": 15,
            "description": "Create and return a \"version 4\" RFC-4122 UUID string.",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 6,
            "description": "Sends a message to the background script",
            "params": [
                {
                    "name": "message",
                    "description": "The message to send",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Function to be called by the receiver",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 20,
            "description": "Sends a message to a specific browsertab",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the tab, the message is to be sent to",
                    "type": "Integer"
                },
                {
                    "name": "msg",
                    "description": "The message to send",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to be called by the receiver",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 34,
            "description": "Sends a message to all tabs",
            "params": [
                {
                    "name": "msg",
                    "description": "The message to send",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to be called by the receivers",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 51,
            "description": "Sends a message to all tabs, except a single one, specified by its identifier",
            "params": [
                {
                    "name": "tabID",
                    "description": "Identifier of the tab to be excluded from the receivers",
                    "type": "Integer"
                },
                {
                    "name": "msg",
                    "description": "The message to send",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to be called by the receivers",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 71,
            "description": "Listens for incoming messages",
            "params": [
                {
                    "name": "callback",
                    "description": "a function that looks like this: \n    function(any message, MessageSender sender, function sendResponse) {...};",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 90,
            "description": "Injects functionality for showing a fancybox overlay into the current tab \nand forwards the request to it (request contains url to display)",
            "params": [
                {
                    "name": "tabID",
                    "description": "identifier of the tab, the fancybox should be injected",
                    "type": "Integer"
                },
                {
                    "name": "req",
                    "description": "request to be forwarded to the tab, with attributes \"method\"=\"fancybox\" and \"data\"= the url to display",
                    "type": "Object"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 111,
            "description": "Detects the language of the specified tab.",
            "params": [
                {
                    "name": "tabID",
                    "description": "identifier of the tab",
                    "type": "Integer"
                },
                {
                    "name": "success",
                    "description": "callback, which receives the country code as parameter",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 127,
            "description": "Searches the history, see https://developer.chrome.com/extensions/history#method-search for documentation",
            "params": [
                {
                    "name": "query",
                    "description": "the query object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback function, receiving the search result as parameter",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 137,
            "description": "Retrieve the visits to the specified url.",
            "params": [
                {
                    "name": "url",
                    "description": "the url for which to retrieve the visits",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "callback function, receiving an array of visit items corresponding to the supplied url",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 156,
            "description": "See https://developer.chrome.com/extensions/tabs#event-onUpdated for documentation",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 165,
            "description": "See https://developer.chrome.com/extensions/tabs#event-onActivated for documentation",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 175,
            "description": "See https://developer.chrome.com/extensions/tabs#method-get for documentation",
            "params": [
                {
                    "name": "tabID",
                    "description": "identifier of the tab",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 185,
            "description": "See https://developer.chrome.com/extensions/tabs#method-query for documentation",
            "params": [
                {
                    "name": "queryInfo",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 195,
            "description": "Listens to tab removed events",
            "params": [
                {
                    "name": "callback",
                    "description": "callback function, receiving the identifier of the removed tab",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 213,
            "description": "Listen to window focus change events",
            "params": [
                {
                    "name": "callback",
                    "description": "callback function for event, receiving the window identifier as parameter",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 222,
            "description": "for documentation see https://developer.chrome.com/extensions/windows#method-getCurrent",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 247,
            "description": "See https://developer.chrome.com/extensions/browserAction#event-onClicked for documentation",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 256,
            "description": "See https://developer.chrome.com/extensions/browserAction#method-getBadgeText for documentation",
            "params": [
                {
                    "name": "details",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/browser_specific.js",
            "line": 266,
            "description": "See https://developer.chrome.com/extensions/browserAction#method-setBadgeText for documentation",
            "params": [
                {
                    "name": "details",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/searchResultList.js",
            "line": 3,
            "description": "Implements a search result list, which can be used by all components.\nThe list updates itself, if a new query was issued and new results arrive.\nRatings are updated as well.\nRequired libs:\n- jquery\n- jquery.raty\n- jquery-ui\nRequired css-files:\n- eexcess.css\n- searchResultList.css\n- jquery-ui.css\nHandlers for preview and rating can be customized via options, as well as the\npath to the media folder and the path to the libs folder\n\nSee an usage example in /usage_examples searchResultList.js and searchResultList.html",
            "params": [
                {
                    "name": "divContainer",
                    "description": "",
                    "type": "Jquery div elmeent"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/searchResultList.js",
            "line": 24,
            "description": "Event handler on the pagination buttons",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 22,
            "description": "Wrapper for local storage access. If a value is supplied, it is stored at\nwith the supplied key. Otherwise the function returns the value stored at\nthe supplied key.",
            "params": [
                {
                    "name": "key",
                    "description": "The key for which to retrieve/store a value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "(optional) The value to store. If no value is\nsupplied, the value at the supplied key is returned.",
                    "type": "JSON"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 39,
            "description": "Obtains a connection to the database",
            "params": [
                {
                    "name": "success",
                    "description": "success callback, receives the database as parameter",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 53,
            "description": "Puts an object into the desired object store (may overwrite an existing entry)",
            "params": [
                {
                    "name": "objectStore",
                    "description": "name of the object store, where the entry should be put in",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback",
                    "type": "Function"
                },
                {
                    "name": "success",
                    "description": "(optional) success callback",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 76,
            "description": "Adds an object to the desired object store",
            "params": [
                {
                    "name": "objectStore",
                    "description": "name of the object store to which an entry should be added",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the object to add",
                    "type": "Object"
                },
                {
                    "name": "success",
                    "description": "(optional) success callback without parameters",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback without parameters",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 98,
            "description": "Stores the closing of a result with to the database. This means updating\nan existing entry for a started view with the duration of the view.",
            "params": [
                {
                    "name": "resource",
                    "description": "url of the resource",
                    "type": "String"
                },
                {
                    "name": "success",
                    "description": "(optional) success callback, receives the updated entry as parameter",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback without parameters",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 132,
            "description": "Stores the rating of a resource. If a rating for this resource is already\npresent within the same context, the rating is updated",
            "params": [
                {
                    "name": "rating",
                    "description": "the rating, including the resource and context",
                    "type": "Object"
                },
                {
                    "name": "success",
                    "description": "(optional) success callback without parameters",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback without parameters",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 182,
            "description": "Obtains the rating for a resource from the database. At the moment, the\nrating's context is not considered (the same result item may be rated \ndifferent, when retrieved by different queries), but instead, the first \nrating found is returned.",
            "params": [
                {
                    "name": "uri",
                    "description": "the uri of the resource for which to retrieve the rating",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "the context for which to retrieve the rating",
                    "type": "Object"
                },
                {
                    "name": "success",
                    "description": "success callback, receiving the rating score as parameter",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback, receiving the error message as parameter",
                    "type": "Function"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 223,
            "description": "Obtains ratings for a set of results from the database. At the moment, a\nrating's context is not considered (the same result item may be rated\ndifferent, when retrieved by different queries), but instead, the first\nrating found is returned.",
            "params": [
                {
                    "name": "items",
                    "description": "Array of result objects for which to retrieve ratings",
                    "type": "Array"
                },
                {
                    "name": "success",
                    "description": "success callback, receiving the updated results as parameter",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 277,
            "description": "Enriches a visit with its referrer (if any) and stores it in the database",
            "params": [
                {
                    "name": "visitItem",
                    "description": "the visit to store",
                    "type": "Object"
                },
                {
                    "name": "referringVisitId",
                    "description": "identifier of the referring visit",
                    "type": "Integere"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 301,
            "description": "Stores recommendations in the database, along with the context in which \nthey were retrived and a timestamp.",
            "params": [
                {
                    "name": "recommendations",
                    "description": "the recommendations to store",
                    "type": "Array"
                },
                {
                    "name": "context",
                    "description": "the context in which the recommendations were retrieved",
                    "type": "Object"
                },
                {
                    "name": "timestamp",
                    "description": "the timestamp",
                    "type": "Long"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 323,
            "description": "check if recommendation is already present in database for this context\ncompare context objects by their string representation ATTENTION: attribute order matters!!!",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "common_js/storage.js",
            "line": 343,
            "description": "Initializes or updates the database. If the rm_previous parameter is set to true or left empty, the previous entries are removed.",
            "params": [
                {
                    "name": "success",
                    "description": "(optional) success callback (receives the database as parameter)",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "(optional) error callback (receives the error object as parameter)",
                    "type": "Function"
                },
                {
                    "name": "rm_previous",
                    "description": "(optional) flag, indicating if the previous entries should be removed (by default they are)",
                    "type": "Type"
                }
            ],
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "libs/flat_ui/js/bootstrap.min.js",
            "line": 1,
            "description": "Bootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "libs/flat_ui/js/jquery.stacktable.js",
            "line": 1,
            "description": "MODIFIED CAUSE WE NEEDED OUR OWN MARKUP\nstacktable.js\nAuthor & copyright (c) 2012: John Polacek\nDual MIT & GPL license\n\nPage: http://johnpolacek.github.com/stacktable.js\nRepo: https://github.com/johnpolacek/stacktable.js/\n\njQuery plugin for stacking tables on small screens",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "libs/clipper_unminified.js",
            "line": 1,
            "description": "*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "libs/clipper_unminified.js",
            "line": 34,
            "description": "*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "libs/clipper_unminified.js",
            "line": 57,
            "description": "*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/common.js",
            "line": 6,
            "description": "Returns all the text input elements of class CLASS_TEXT.",
            "itemtype": "method",
            "name": "getTextInputs",
            "return": {
                "description": "list of elements.",
                "type": "NodeList"
            },
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/common.js",
            "line": 15,
            "description": "Initializes the text input elements of the form. \nValues are taken from the data store.",
            "itemtype": "method",
            "name": "initTextInputs",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/common.js",
            "line": 32,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "clas",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "elementListener",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/common.js",
            "line": 48,
            "description": "Display all the elements.",
            "params": [
                {
                    "name": "elements",
                    "description": "",
                    "type": "NodeList"
                }
            ],
            "itemtype": "method",
            "name": "displayElements",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/common.js",
            "line": 60,
            "description": "Display the element according to the privacy level.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "displayElement",
            "class": "EEXCESS.model.common",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 6,
            "itemtype": "attribute",
            "name": "STORAGE_PREFIX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 11,
            "itemtype": "attribute",
            "name": "ADD_LANGUAGE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 15,
            "itemtype": "attribute",
            "name": "REMOVE_LANGUAGE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "ADD_INTEREST",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 23,
            "itemtype": "attribute",
            "name": "REMOVE_INTEREST",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 28,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_GREY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 32,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_GREEN",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 36,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_ORANGE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 40,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_RED",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 45,
            "itemtype": "attribute",
            "name": "INPUT_SUFFIX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 49,
            "itemtype": "attribute",
            "name": "DISPLAY_SUFFIX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 53,
            "itemtype": "attribute",
            "name": "POLICY_SUFFIX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 58,
            "itemtype": "attribute",
            "name": "PARENT_ID",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 63,
            "itemtype": "attribute",
            "name": "NAME",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 67,
            "itemtype": "attribute",
            "name": "COUNTRY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 71,
            "itemtype": "attribute",
            "name": "CITY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 75,
            "itemtype": "attribute",
            "name": "LOCATION",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 79,
            "itemtype": "attribute",
            "name": "BIRTHDATE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 83,
            "itemtype": "attribute",
            "name": "LANGUAGE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 87,
            "itemtype": "attribute",
            "name": "LANGUAGES",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 91,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 96,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 100,
            "itemtype": "attribute",
            "name": "INTEREST",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 104,
            "itemtype": "attribute",
            "name": "INTERESTS",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 109,
            "itemtype": "attribute",
            "name": "CLASS_TEXT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 113,
            "itemtype": "attribute",
            "name": "CLASS_DATE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 117,
            "itemtype": "attribute",
            "name": "CLASS_LANGUAGE",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 121,
            "itemtype": "attribute",
            "name": "CLASS_INTEREST",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 125,
            "itemtype": "attribute",
            "name": "CLASS_BUTTON",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 129,
            "itemtype": "attribute",
            "name": "CLASS_BUTTON_GROUP",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 134,
            "description": "List of european languages: Bulgarian, Czech, Danish, Dutch, English, Estonian, etc.",
            "itemtype": "attribute",
            "name": "TAB_LANGUAGE_LABELS",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 141,
            "description": "List of skill level (Fluent, Intermediate, Basic knowledge).",
            "itemtype": "attribute",
            "name": "TAB_LANGUAGE_SKILLS",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 147,
            "description": "The default language is English (TAB_LANGUAGE_LABELS[4]).",
            "itemtype": "attribute",
            "name": "DEFAULT_LANGUAGE_LABEL_INDEX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 152,
            "description": "The default skill level is Fluent (TAB_LANGUAGE_SKILLS[0]).",
            "itemtype": "attribute",
            "name": "DEFAULT_LANGUAGE_SKILL_INDEX",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 157,
            "itemtype": "attribute",
            "name": "DEFAULT_POLICY_LEVEL",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 161,
            "itemtype": "attribute",
            "name": "MAX_POLICY_THRESHOLD",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 167,
            "itemtype": "attribute",
            "name": "NAME_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 171,
            "itemtype": "attribute",
            "name": "COUNTRY_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 175,
            "itemtype": "attribute",
            "name": "CITY_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 179,
            "itemtype": "attribute",
            "name": "BIRTHDATE_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 183,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 187,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 191,
            "itemtype": "attribute",
            "name": "INTEREST_INPUT",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 197,
            "itemtype": "attribute",
            "name": "NAME_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 201,
            "itemtype": "attribute",
            "name": "COUNTRY_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 205,
            "itemtype": "attribute",
            "name": "CITY_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 209,
            "itemtype": "attribute",
            "name": "BIRTHDATE_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 213,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 217,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 221,
            "itemtype": "attribute",
            "name": "INTEREST_DISPLAY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 227,
            "itemtype": "attribute",
            "name": "NAME_POLICY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 231,
            "itemtype": "attribute",
            "name": "LOCATION_POLICY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 235,
            "itemtype": "attribute",
            "name": "BIRTHDATE_POLICY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 239,
            "itemtype": "attribute",
            "name": "LANGUAGE_POLICY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 243,
            "itemtype": "attribute",
            "name": "INTEREST_POLICY",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 249,
            "description": "List of all the input elements (e.g., birthDateInput).",
            "itemtype": "attribute",
            "name": "INPUTS",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 254,
            "description": "List of all the display element (e.g., birthDateDisplay). \nA value can be null if the corresponding input is never displayed (e.g., nameInput).",
            "itemtype": "attribute",
            "name": "DISPLAYS",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/constants.js",
            "line": 260,
            "description": "List of all the policy elements (e.g., birthDatePolicy). \nA value can appear multiple times when several input values depend on the same button (e.g., countryInput and cityInput).",
            "itemtype": "attribute",
            "name": "POLICIES",
            "class": "EEXCESS.model.constants",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 6,
            "itemtype": "method",
            "name": "getInterestInputs",
            "return": {
                "description": "list of interest inputs.",
                "type": "ListNode"
            },
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 14,
            "description": "Initializes the interests with the values from the data store. \nIt generates the HTML code, initializes the TagIt fields, adds the listeners and initializes the buttons.",
            "itemtype": "method",
            "name": "initInterests",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 41,
            "description": "Adds an interest: generates the HTML code, adds the listeners, initializes the buttons, saves the interests and update the listeners.",
            "itemtype": "method",
            "name": "addNewInterest",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 71,
            "description": "Initializes an interest (instantiate the TagIt field).",
            "params": [
                {
                    "name": "interestId",
                    "description": "identifier of an interest.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "initInterest",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 88,
            "description": "Create the listeners for a TagIt field.",
            "params": [
                {
                    "name": "interestId",
                    "description": "identifier of an interest.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "createInterestListener",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 111,
            "description": "Updates the listeners for all the interests: \nTagIt field listeners, listener for the removal of an interest, and buttons listeners.",
            "itemtype": "method",
            "name": "updateInterestListeners",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 133,
            "description": "Generate the HTML code to insert a new interest.",
            "params": [
                {
                    "name": "index",
                    "description": "Index of the interest to add.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "HTML code.",
                "type": "String"
            },
            "itemtype": "method",
            "name": "generateCodeInterest",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 168,
            "description": "Saves all the interests: extract the values from the form and store it in the data store.",
            "itemtype": "method",
            "name": "saveInterests",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 186,
            "description": "Adds a topic to an interest (added only if it's not already contained).",
            "params": [
                {
                    "name": "interests",
                    "description": "Array of interests.",
                    "type": "Array"
                },
                {
                    "name": "interestId",
                    "description": "Identifier of the interest to be updated.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "Label of the new topic.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of interests containing \"label\".",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "addTopic",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 210,
            "description": "Removes a topic for an interest.",
            "params": [
                {
                    "name": "interests",
                    "description": "Array of interests.",
                    "type": "Array"
                },
                {
                    "name": "interestId",
                    "description": "Identifier of the interest to be updated.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "Label of the topic to be removed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of interests without \"label\".",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "removeTopic",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 232,
            "description": "Removes the listener assigned to a link. \nThis method is used when an interest is removed to make sure the removal is done properly. \nIt resets the policy level, remove the HTML code, and save the interests.",
            "params": [
                {
                    "name": "link",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeInterestListener",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/interests.js",
            "line": 245,
            "description": "Listener invoked when an interest must be added.",
            "itemtype": "method",
            "name": "addInterestListener",
            "class": "EEXCESS.model.interests",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 6,
            "description": "TODO",
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getLanguageSelects",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 15,
            "description": "TODO",
            "itemtype": "method",
            "name": "initLanguages",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 31,
            "description": "TODO",
            "itemtype": "method",
            "name": "addNewLanguage",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 49,
            "description": "TODO",
            "itemtype": "method",
            "name": "updateLanguageListeners",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 74,
            "description": "TODO",
            "params": [
                {
                    "name": "index",
                    "description": ""
                },
                {
                    "name": "label",
                    "description": ""
                },
                {
                    "name": "skill",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "generateCodeLanguage",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 143,
            "description": "TODO",
            "itemtype": "method",
            "name": "saveLanguages",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 170,
            "description": "TODO",
            "params": [
                {
                    "name": "link",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeLanguageListener",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/languages.js",
            "line": 181,
            "description": "TODO",
            "itemtype": "method",
            "name": "addLanguageListener",
            "class": "EEXCESS.model.languages",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/obfuscation.js",
            "line": 6,
            "description": "TODO",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurField",
            "class": "EEXCESS.model.obfuscation",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/obfuscation.js",
            "line": 49,
            "description": "TODO",
            "params": [
                {
                    "name": "birthdate",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "level",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurBirthdate",
            "class": "EEXCESS.model.obfuscation",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/obfuscation.js",
            "line": 72,
            "description": "TODO",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "level",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "threshold",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurValue",
            "class": "EEXCESS.model.obfuscation",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 6,
            "description": "TODO",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "itemtype": "method",
            "name": "getButtonGroups",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 15,
            "description": "TODO",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "itemtype": "method",
            "name": "getButtons",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 25,
            "description": "TODO",
            "itemtype": "method",
            "name": "initButtons",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 36,
            "description": "TODO",
            "params": [
                {
                    "name": "buttonGroup",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "initButtonGroup",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 75,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "updateButton",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 110,
            "description": "TODO",
            "params": [
                {
                    "name": "buttonGroup",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "itemtype": "method",
            "name": "getPolicyLevel",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 128,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "policyButtonListener",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/policy.js",
            "line": 145,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "typePolicy",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "defaultPolicyLevel",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "itemtype": "method",
            "name": "resetElementPolicy",
            "class": "EEXCESS.model.policy",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/profile.js",
            "line": 50,
            "description": "TODO",
            "itemtype": "method",
            "name": "init",
            "class": "EEXCESS.model.profile",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/profile.js",
            "line": 61,
            "description": "TODO",
            "itemtype": "method",
            "name": "display",
            "class": "EEXCESS.model.profile",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/profile.js",
            "line": 71,
            "description": "TODO",
            "itemtype": "method",
            "name": "createListeners",
            "class": "EEXCESS.model.profile",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/storage.js",
            "line": 6,
            "description": "TODO",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "getStoredValue",
            "class": "EEXCESS.model.storage",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/storage.js",
            "line": 17,
            "description": "TODO",
            "params": [
                {
                    "name": "id",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "storeValue",
            "class": "EEXCESS.model.storage",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/storage.js",
            "line": 27,
            "description": "TODO",
            "params": [
                {
                    "name": "inputElement",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "saveInput",
            "class": "EEXCESS.model.storage",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/storage.js",
            "line": 37,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "saveButton",
            "class": "EEXCESS.model.storage",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/storage.js",
            "line": 53,
            "description": "TODO",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getStoredJson",
            "class": "EEXCESS.model.storage",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 6,
            "description": "Gets all the links having `tag' in the class attribute.",
            "params": [
                {
                    "name": "tag",
                    "description": "Value of the tag (e.g., `removeLanguageremoveLanguage')",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of elements.",
                "type": "ListNode"
            },
            "itemtype": "method",
            "name": "getRemoveLinks",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 25,
            "description": "Gets the element corresponding to the display of another element. \nFor instance, getDisplayElementFromElement(\"countryInput\") returns \"countryDisplay\". \nThe returned value can be null.",
            "params": [
                {
                    "name": "element",
                    "description": "An input or policy element.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "A display element corresponding to the input or policy element.",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "getDisplayElementFromElement",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 37,
            "description": "Gets the element corresponding to the policy of another element. \nFor instance, getPolicyElementFromElement(\"countryInput\") returns \"locationPolicy\".",
            "params": [
                {
                    "name": "element",
                    "description": "An input (or display) element.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "A policy element corresponding to the input (or display) element.",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "getPolicyElementFromElement",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 48,
            "description": "TODO",
            "params": [
                {
                    "name": "inputElement",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getElementFromElement",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 72,
            "description": "Gets the element identifier corresponding to an identifier.",
            "params": [
                {
                    "name": "id",
                    "description": "Identifier of the element to be retrieved (e.g., \"cityInput\", \"locationPolicy\").",
                    "type": "String"
                },
                {
                    "name": "array",
                    "description": "Array in which the element must be searched (e.g., DISPLAYS).",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Identifier of the element retrieved from \"id\".",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getElementIdFromId",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 99,
            "description": "Determines if a string ends with a number.",
            "params": [
                {
                    "name": "str",
                    "description": "String to be analyzed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the \"str\" ends with a number; False otherwise.",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "endsWithNumber",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 109,
            "description": "Extracts the number ending a string.",
            "params": [
                {
                    "name": "str",
                    "description": "String to be analyzed (e.g., \"id123\").",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number ending the string (e.g., 123).",
                "type": "Integer"
            },
            "itemtype": "method",
            "name": "extractEndingNumber",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 119,
            "description": "TODO",
            "params": [
                {
                    "name": "policyElement",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getInputElementsFromPolicyElement",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 145,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeClass",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 156,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "addClass",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 169,
            "description": "TODO",
            "params": [
                {
                    "name": "removeElement",
                    "description": ""
                },
                {
                    "name": "type",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeElement",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "privacy/util-html.js",
            "line": 182,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "type",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "updateHtml",
            "class": "EEXCESS.model.util-html",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1157,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1177,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1186,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1207,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1221,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1250,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1261,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1272,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1294,
            "description": "Detect xml",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1308,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1718,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/FacetScape/lib/jquery-2.0.3.js",
            "line": 1747,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 26,
            "description": "Bar event handlers",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 82,
            "description": "Legend events' handlers",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 142,
            "description": "Entry method. Sets canvas dimensions and initial input.\n\tDraws main svg components (svg, focus & context), defines scales and axis.",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 151,
            "description": "Define canvas dimensions",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 162,
            "description": "Define input variables",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 174,
            "description": "Define scales",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 190,
            "description": "Define axis functions",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 198,
            "description": "Draw main components",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 212,
            "description": "Add focus and context g components",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 221,
            "description": "Draw elements in focus area",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 250,
            "description": "Legends",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 287,
            "description": "Reusable function. Invoked either from 'draw' or 'redraw'",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 333,
            "description": "Highlight bar and color legend selected",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 392,
            "description": "Reset barchart",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 405,
            "description": "Reset barchart",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Barchart/barchart.js",
            "line": 425,
            "description": "Clear selected bar and legend when a list item is clickend on in vis-template",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Geochart/geochart.js",
            "line": 93,
            "description": "Draw GEO vis",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Geochart/geochart.js",
            "line": 102,
            "description": "Define canvas dimensions",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Geochart/geochart.js",
            "line": 116,
            "description": "Define input variables",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Geochart/geochart.js",
            "line": 323,
            "description": "Reset GEO  vis",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Geochart/geochart.js",
            "line": 338,
            "description": "Highlight items",
            "params": [
                {
                    "name": "indexArray:",
                    "description": "array with items' indices to highlight. They match items in receivedData (parameter in Render.draw)"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/js/geometry.js",
            "line": 14,
            "description": "Calculate node radius according to current extent",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/js/geometry.js",
            "line": 32,
            "description": "Calculates x-offset for text attached to refnodes",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/js/geometry.js",
            "line": 47,
            "description": "Calculates y-offset for text attached to refnodes",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/js/geometry.js",
            "line": 64,
            "description": "Calculates offset for keyword nodes",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 4,
            "description": "Steps executed when the timeline is intialized",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 30,
            "description": "Define line function to connect nodes in focus area",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 58,
            "description": "Brush brushed and brushended",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 102,
            "description": "Zoom zoomed",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 134,
            "description": "Node click handler",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 164,
            "description": "Draw lines linking nodes in focus area",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 186,
            "description": "Node mouseover handler",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 234,
            "description": "Node mouseout handler",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 264,
            "description": "Keyword nodes' handlers",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 288,
            "description": "Legend events' handlers",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 395,
            "description": "Draw function called from Vis-Template every time the visual channels or the data change",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 403,
            "description": "Define canvas dimensions",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 417,
            "description": "Assign visual channels and processed data",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 431,
            "description": "Define scales",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 465,
            "description": "Define axis",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 487,
            "description": "Define behaviors",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 507,
            "description": "Draw chart main components",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 556,
            "description": "Draw axis in focus area",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 588,
            "description": "Draw in focus area",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 592,
            "description": "Main nodes",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 681,
            "description": "Legends",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 714,
            "description": "Draw in context area (brush)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 774,
            "description": "Method called when a node is clicked. Displays a small green node for each keyword related to the node item,\n\tthe links connecting them and te corresponding text",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 844,
            "description": "Redraw nodes, lines and main x axis",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 898,
            "description": "Reset chart's elements",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 930,
            "description": "Remove links, keyword nodes and restore main nodes' style",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 965,
            "description": "Nodes can be highlighted from the Vis-Template though the following function",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/Timeline/timeline.js",
            "line": 1039,
            "description": "Nodes can be selected from the Vis-Template by indicating a single index or an array of indices",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/accordion-and-dropdown.js",
            "line": 2,
            "description": "Dropdown list",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/accordion-and-dropdown.js",
            "line": 85,
            "description": "Accordion with drop-down lists",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/colorpicker.js",
            "line": 2,
            "description": "Colorpicker",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/settings.js",
            "line": 8,
            "description": "DIMENSIONS",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/settings.js",
            "line": 26,
            "description": "DIMENSIONS processing",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/settings.js",
            "line": 79,
            "description": "INITDATA",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/settings.js",
            "line": 94,
            "description": "INITDATA processing",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/utils.js",
            "line": 2,
            "description": "parsing functions",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/utils.js",
            "line": 48,
            "description": "Array prototype",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/utils.js",
            "line": 95,
            "description": "String prototype",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/js/utils.js",
            "line": 110,
            "description": "jQuery functions (for DOM elements)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/starter.js",
            "line": 98,
            "description": "************************************************************************************************************************************************",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 97,
            "description": "START object is returned to starter so it can call init or redresh upon new results received",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 104,
            "description": "Initizialization function called from starter.js\nSets up the visualization-independent components and instantiates the visualization objects (e.g. timeVis)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 132,
            "description": "Initizialization function called from starter.js\nSets up the visualization-independent components and instantiates the visualization objects (e.g. timeVis)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 180,
            "description": "Bind event handlers to buttons\n$",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 194,
            "description": "Format the received mapping combinations so they can be more easily manipulated",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 324,
            "description": "Updates the text in the center of the header according to the received paramter",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 340,
            "description": "Updates search field on the header (on left side for the moment)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 367,
            "description": "Click on search button triggers a new search",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 376,
            "description": "Chart <select> changed",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 385,
            "description": "Function that wraps the change event handlers. These events are triggered by the <select> elements (chart and visual channels)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 433,
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 462,
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 510,
            "description": "Creates the <select> element to chose the type of visualization (chart)",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 532,
            "description": "Created one <select> element per visual channel\nIt is executed every time the chart selection changes",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 629,
            "description": "Update visual channels' <select> elements according to mapping combination received as parameter",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 656,
            "description": "Calculates the index to scroll to, which depends on the existence or abscence of a ranking\nThere exists a ranking if dataRanking.length > 0",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 673,
            "description": "Function that populates the list on the right side of the screen.\nEach item represents one recommendation contained in the variable \"data\"",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 763,
            "description": "Draws legend color icons in each content list item",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 790,
            "description": "Draws legend color icons in each content list item",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 823,
            "description": "Function that highlights items on the content list, according to events happening on the visualization.\nE.g. when one or more keywords are selected, the matching list items remain highlighted, while the others become translucid\nIf no parameters are received, all the list items are restored to the default opacity",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 892,
            "description": "Sets the chart and the mapping combination to be used, acording to the <select> elements' selected values",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 938,
            "description": "Checks if the mapping combination is valid. If not, it returns a valid one and calls\nthe method to change the visual attributes' selected values in the corresponding <select> elements",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 983,
            "description": "chartName = name of the chart currently displayed",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/Vis-Template/vis.js",
            "line": 991,
            "description": "Clears the visualization and specific controls areas.\nRetrieves the selected chart and the appropriate mapping combination\nCalls the \"draw\" function corresponding to the selected chart",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/bookmarkingAPI.js",
            "line": 40,
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/bookmarkingAPI.js",
            "line": 198,
            "params": [
                {
                    "name": "attrValues:",
                    "description": "array or single item value (id or name) for which all the corresponding bookmarks want to be retrieved"
                },
                {
                    "name": "attrName:",
                    "description": "name of the attribute to be used for comparison\nreturn: dictionary whose entries correspond to the values included in attrValues that are actually bookmarked.\n    Each entry contains an array 'bookmarked', where each item consists of an object specifying bookmark name and id, plus the query within which the item was bookmarked'\n    An item representes a recommended documents that can be bookmarked in more than one bookmark (but only once in each bookmark). Hence 'bookmarked'\n    has as many elements as the # of bookmarkswhere an item was included."
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "visualizations/bookmarkingAPI.js",
            "line": 243,
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "widget/widget.js",
            "line": 5,
            "description": "Updates the widget's view with the current state of the model in the background script",
            "memberof": "EEXCESS",
            "params": [
                {
                    "name": "widget",
                    "description": "The current state of the widget model in the background script",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "widget/widget.js",
            "line": 24,
            "description": "Initializes the widget's view with the current state of the widget in the background script's model",
            "memberof": "EEXCESS",
            "params": [
                {
                    "name": "widget",
                    "description": "The current state of the widget's model in the background script",
                    "type": "Object"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "content.js",
            "line": 2,
            "description": "Flag for indicating the widget's current visibility state",
            "memberof": "EEXCESS",
            "type": "Boolean",
            "class": "",
            "namespace": "EEXCESS.model"
        },
        {
            "file": "content.js",
            "line": 9,
            "description": "Changes the widget's visibility to the provided value.\nWhen the widget is to be shown, the width of the current page is reduced\nby the widget's width and the widget is displayed at the right border.\nUpon hiding the widget, the size limits for the current page are reset.",
            "memberof": "EEXCESS",
            "params": [
                {
                    "name": "visible",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "namespace": "EEXCESS.model"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: memberof",
            "line": " background/annotations.js:16"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/annotations.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/apiCalls.js:5"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/apiCalls.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/corpus.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/corpus_webWorker.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/corpus_webWorker.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/corpus_webWorker.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/logging.js:5"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/logging.js:18"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:26"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:37"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:65"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:90"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:130"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/logging.js:157"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:123"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:174"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/model.js:174"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:201"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:306"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:317"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:329"
        },
        {
            "message": "unknown tag: memberof",
            "line": " background/model.js:350"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " background/model.js:350"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/browser_specific.js:222"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/browser_specific.js:247"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/browser_specific.js:256"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/browser_specific.js:266"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/storage.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " common_js/storage.js:223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/interests.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/interests.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/interests.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/interests.js:210"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/languages.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/languages.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/obfuscation.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/obfuscation.js:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/obfuscation.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/policy.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/policy.js:15"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/policy.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/storage.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:99"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:109"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " privacy/util-html.js:119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1221"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1308"
        },
        {
            "message": "unknown tag: memberof",
            "line": " widget/widget.js:5"
        },
        {
            "message": "unknown tag: memberof",
            "line": " widget/widget.js:24"
        },
        {
            "message": "unknown tag: memberof",
            "line": " content.js:2"
        },
        {
            "message": "unknown tag: memberof",
            "line": " content.js:9"
        },
        {
            "message": "Missing item type\nThis function encapsulates variables and functions for storing and retrieving\nannotations.",
            "line": " background/annotations.js:7"
        },
        {
            "message": "Missing item type\nCreates an annotation in json-ld format, representing a rating of\nthe provided resource with the given score and stores it in the database.\nIf a rating for this resource with the same context is already present in the database, its score will be updated.",
            "line": " background/annotations.js:16"
        },
        {
            "message": "Missing item type\nRetrieves the rating score of a resource from the database.",
            "line": " background/annotations.js:62"
        },
        {
            "message": "Missing item type\nExtend the String object with a 'startsWith' method",
            "line": " background/apiCalls.js:1"
        },
        {
            "message": "Missing item type\nChecks, if a string-object starts with the provided term",
            "line": " background/apiCalls.js:5"
        },
        {
            "message": "Missing item type\nSends a query with the specified parameters to europeana and hands the results\nto the success callback or the error message to the error callback.",
            "line": " background/apiCalls.js:20"
        },
        {
            "message": "Missing item type\nSends a query with the specified parameters to an API-endpoint",
            "line": " background/apiCalls.js:113"
        },
        {
            "message": "Missing item type\nEncapsulates functionality for invoking a web worker, in order to create a corpus of terms from an array of text passages",
            "line": " background/corpus.js:3"
        },
        {
            "message": "Missing item type\nRepresents a token.\n\nBy default, the type is set to 'w', if no type is provided. This corresponds\nto a regular word.",
            "line": " background/corpus_webWorker.js:3"
        },
        {
            "message": "Missing item type\nReturns an array of stopwords for the provided language if the specified\nlanguage is supported.\n\nCurrently, only english and german are supported",
            "line": " background/corpus_webWorker.js:19"
        },
        {
            "message": "Missing item type\nCreates a token out of the provided text.\nRemoves leading/trailing whitespaces and special characters.\nTokens, consisting of a single character after this process are discarded.\nFor urls, tokens with the type 'u' are created and for email-adresses,\ntokens with the type 'e' respectively.",
            "line": " background/corpus_webWorker.js:76"
        },
        {
            "message": "Missing item type\nTokenizes the provided text",
            "line": " background/corpus_webWorker.js:110"
        },
        {
            "message": "Missing item type\nRepresents a corpus of tokens",
            "line": " background/corpus_webWorker.js:146"
        },
        {
            "message": "Missing item type\nFunction updates the amount of tokens belonging to the provided parent\n\nIf no entry exists for the token in the corpus, a new entry is created along \nwith the corresponding parent entry. If the token is present, but the parent\nentry not, the latter is added. Otherwise, the amount of tokens corresponding\nto the given parent entry is incremented by 1. In all cases, the overall \namount of occurrences of the provided token is incremented by 1.",
            "line": " background/corpus_webWorker.js:152"
        },
        {
            "message": "Missing item type\nBuilds a corpus of tokens from the given elements",
            "line": " background/corpus_webWorker.js:177"
        },
        {
            "message": "Missing item type\nExtend the String object with a 'startsWith' method",
            "line": " background/logging.js:1"
        },
        {
            "message": "Missing item type\nChecks, if a string-object starts with the provided term",
            "line": " background/logging.js:5"
        },
        {
            "message": "Missing item type\nEncapsulates functionality for logging user actions.",
            "line": " background/logging.js:18"
        },
        {
            "message": "Missing item type\nStores recommendations which were retrieved from a partner's datastore\ninto the database along with the context, in which the items were recommended",
            "line": " background/logging.js:26"
        },
        {
            "message": "Missing item type\nStores the term of a user-initiated query in the database along with its context.\nIf the user selected a piece of text for example, this is assumed to be the context.",
            "line": " background/logging.js:37"
        },
        {
            "message": "Missing item type\nrequest the context from the browsertab, the query was sent and\nexecute database transaction on callback",
            "line": " background/logging.js:47"
        },
        {
            "message": "Missing item type\nStores the user interaction of starting to view a recommended resource",
            "line": " background/logging.js:65"
        },
        {
            "message": "Missing item type\nLogs the duration of a user viewing a recommended resource on closing its view",
            "line": " background/logging.js:90"
        },
        {
            "message": "Missing item type\nEncapsulates functionality for logging history events",
            "line": " background/logging.js:111"
        },
        {
            "message": "Missing item type\nSets the variable 'current' to the current visit with the current point of\ntime as starting timestamp. If the variable already contained another visit, the\ncontained visit is stored to the database with the current point of time\nas ending timestamp. If the current url is the same as in the 'current'-\nvariable, the content of this variable remains unchanged.",
            "line": " background/logging.js:130"
        },
        {
            "message": "Missing item type\nAdds additional information to a visit and stores it in the database.\nThe information added covers:\n- transition (as obtained by chrome API)\n- chrome_visitId (a corresponding identifier in chrome's history)\n- referrer (url of the referrer, may be empty)",
            "line": " background/logging.js:157"
        },
        {
            "message": "Missing item type\nEncapsulates functionality for the model of the eexcess widget",
            "line": " background/model.js:3"
        },
        {
            "message": "Missing item type\nRepresents the current query and according results",
            "line": " background/model.js:32"
        },
        {
            "message": "Missing item type\nUpdate results to a query with ratings from the database and send each\nupdated result to all tabs",
            "line": " background/model.js:123"
        },
        {
            "message": "Missing item type\nToggles the visibility of the widget",
            "line": " background/model.js:174"
        },
        {
            "message": "Missing item type\nExecutes the following functions:\n- log the query\n- set widget's tab to 'results'\n- query API-endpoint\nAfter a successful query to the endpoint, the obtained results will be\nlogged in the database and enriched with ratings from the database.\nFurthermore they are set as the current results in the widget's model.\nAt logging the recommendations, query is added as context.",
            "line": " background/model.js:201"
        },
        {
            "message": "Missing item type\nSends the current model state to the specified callback",
            "line": " background/model.js:306"
        },
        {
            "message": "Missing item type\nSends the current visibility state of the widget to the specified \ncallback",
            "line": " background/model.js:317"
        },
        {
            "message": "Missing item type\nSets the rating score of a resource in the resultlist to the \nspecified value, stores the rating and informs all other tabs.\nThe query  is added to the rating as context.",
            "line": " background/model.js:329"
        },
        {
            "message": "Missing item type\nReturns the model's current context. The context contains the current\nquery (if any)",
            "line": " background/model.js:350"
        },
        {
            "message": "Missing item type\nHands in the current query and corresponding results to the specified callback",
            "line": " background/model.js:363"
        },
        {
            "message": "Missing item type\nCreate and return a \"version 4\" RFC-4122 UUID string.",
            "line": " background/uuid.js:15"
        },
        {
            "message": "Missing item type\nSends a message to the background script",
            "line": " common_js/browser_specific.js:6"
        },
        {
            "message": "Missing item type\nSends a message to a specific browsertab",
            "line": " common_js/browser_specific.js:20"
        },
        {
            "message": "Missing item type\nSends a message to all tabs",
            "line": " common_js/browser_specific.js:34"
        },
        {
            "message": "Missing item type\nSends a message to all tabs, except a single one, specified by its identifier",
            "line": " common_js/browser_specific.js:51"
        },
        {
            "message": "Missing item type\nListens for incoming messages",
            "line": " common_js/browser_specific.js:71"
        },
        {
            "message": "Missing item type\nInjects functionality for showing a fancybox overlay into the current tab \nand forwards the request to it (request contains url to display)",
            "line": " common_js/browser_specific.js:90"
        },
        {
            "message": "Missing item type\nDetects the language of the specified tab.",
            "line": " common_js/browser_specific.js:111"
        },
        {
            "message": "Missing item type\nSearches the history, see https://developer.chrome.com/extensions/history#method-search for documentation",
            "line": " common_js/browser_specific.js:127"
        },
        {
            "message": "Missing item type\nRetrieve the visits to the specified url.",
            "line": " common_js/browser_specific.js:137"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/tabs#event-onUpdated for documentation",
            "line": " common_js/browser_specific.js:156"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/tabs#event-onActivated for documentation",
            "line": " common_js/browser_specific.js:165"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/tabs#method-get for documentation",
            "line": " common_js/browser_specific.js:175"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/tabs#method-query for documentation",
            "line": " common_js/browser_specific.js:185"
        },
        {
            "message": "Missing item type\nListens to tab removed events",
            "line": " common_js/browser_specific.js:195"
        },
        {
            "message": "Missing item type\nListen to window focus change events",
            "line": " common_js/browser_specific.js:213"
        },
        {
            "message": "Missing item type\nfor documentation see https://developer.chrome.com/extensions/windows#method-getCurrent",
            "line": " common_js/browser_specific.js:222"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/browserAction#event-onClicked for documentation",
            "line": " common_js/browser_specific.js:247"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/browserAction#method-getBadgeText for documentation",
            "line": " common_js/browser_specific.js:256"
        },
        {
            "message": "Missing item type\nSee https://developer.chrome.com/extensions/browserAction#method-setBadgeText for documentation",
            "line": " common_js/browser_specific.js:266"
        },
        {
            "message": "Missing item type\nImplements a search result list, which can be used by all components.\nThe list updates itself, if a new query was issued and new results arrive.\nRatings are updated as well.\nRequired libs:\n- jquery\n- jquery.raty\n- jquery-ui\nRequired css-files:\n- eexcess.css\n- searchResultList.css\n- jquery-ui.css\nHandlers for preview and rating can be customized via options, as well as the\npath to the media folder and the path to the libs folder\n\nSee an usage example in /usage_examples searchResultList.js and searchResultList.html",
            "line": " common_js/searchResultList.js:3"
        },
        {
            "message": "Missing item type\nEvent handler on the pagination buttons",
            "line": " common_js/searchResultList.js:24"
        },
        {
            "message": "Missing item type\nWrapper for local storage access. If a value is supplied, it is stored at\nwith the supplied key. Otherwise the function returns the value stored at\nthe supplied key.",
            "line": " common_js/storage.js:22"
        },
        {
            "message": "Missing item type\nObtains a connection to the database",
            "line": " common_js/storage.js:39"
        },
        {
            "message": "Missing item type\nPuts an object into the desired object store (may overwrite an existing entry)",
            "line": " common_js/storage.js:53"
        },
        {
            "message": "Missing item type\nAdds an object to the desired object store",
            "line": " common_js/storage.js:76"
        },
        {
            "message": "Missing item type\nStores the closing of a result with to the database. This means updating\nan existing entry for a started view with the duration of the view.",
            "line": " common_js/storage.js:98"
        },
        {
            "message": "Missing item type\nStores the rating of a resource. If a rating for this resource is already\npresent within the same context, the rating is updated",
            "line": " common_js/storage.js:132"
        },
        {
            "message": "Missing item type\nObtains the rating for a resource from the database. At the moment, the\nrating's context is not considered (the same result item may be rated \ndifferent, when retrieved by different queries), but instead, the first \nrating found is returned.",
            "line": " common_js/storage.js:182"
        },
        {
            "message": "Missing item type\nObtains ratings for a set of results from the database. At the moment, a\nrating's context is not considered (the same result item may be rated\ndifferent, when retrieved by different queries), but instead, the first\nrating found is returned.",
            "line": " common_js/storage.js:223"
        },
        {
            "message": "Missing item type\nEnriches a visit with its referrer (if any) and stores it in the database",
            "line": " common_js/storage.js:277"
        },
        {
            "message": "Missing item type\nStores recommendations in the database, along with the context in which \nthey were retrived and a timestamp.",
            "line": " common_js/storage.js:301"
        },
        {
            "message": "Missing item type\ncheck if recommendation is already present in database for this context\ncompare context objects by their string representation ATTENTION: attribute order matters!!!",
            "line": " common_js/storage.js:323"
        },
        {
            "message": "Missing item type\nInitializes or updates the database. If the rm_previous parameter is set to true or left empty, the previous entries are removed.",
            "line": " common_js/storage.js:343"
        },
        {
            "message": "Missing item type\nBootstrap.js by @fat & @mdo\nplugins: bootstrap-transition.js, bootstrap-modal.js, bootstrap-dropdown.js, bootstrap-scrollspy.js, bootstrap-tab.js, bootstrap-tooltip.js, bootstrap-popover.js, bootstrap-affix.js, bootstrap-alert.js, bootstrap-button.js, bootstrap-collapse.js, bootstrap-carousel.js, bootstrap-typeahead.js\nCopyright 2012 Twitter, Inc.\nhttp://www.apache.org/licenses/LICENSE-2.0.txt",
            "line": " libs/flat_ui/js/bootstrap.min.js:1"
        },
        {
            "message": "Missing item type\nMODIFIED CAUSE WE NEEDED OUR OWN MARKUP\nstacktable.js\nAuthor & copyright (c) 2012: John Polacek\nDual MIT & GPL license\n\nPage: http://johnpolacek.github.com/stacktable.js\nRepo: https://github.com/johnpolacek/stacktable.js/\n\njQuery plugin for stacking tables on small screens",
            "line": " libs/flat_ui/js/jquery.stacktable.js:1"
        },
        {
            "message": "Missing item type\n*\n Author    :  Angus Johnson                                                   *\n Version   :  5.0.2                                                           *\n Date      :  30 December 2012                                                *\n Website   :  http://www.angusj.com                                           *\n Copyright :  Angus Johnson 2010-2012                                         *\n*\n License:                                                                     *\n Use, modification & distribution is subject to Boost Software License Ver 1. *\n http://www.boost.org/LICENSE_1_0.txt                                         *\n*\n Attributions:                                                                *\n The code in this library is an extension of Bala Vatti's clipping algorithm: *\n \"A generic solution to polygon clipping\"                                     *\n Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n http://portal.acm.org/citation.cfm?id=129906                                 *\n*\n Computer graphics and geometric modeling: implementation and algorithms      *\n By Max K. Agoston                                                            *\n Springer; 1 edition (January 4, 2005)                                        *\n http://books.google.com/books?q=vatti+clipping+agoston                       *\n*\n See also:                                                                    *\n \"Polygon Offsetting by Computing Winding Numbers\"                            *\n Paper no. DETC2005-85513 pp. 565-575                                         *\n ASME 2005 International Design Engineering Technical Conferences             *\n and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n September 24�28, 2005 , Long Beach, California, USA                          *\n http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*",
            "line": " libs/clipper_unminified.js:1"
        },
        {
            "message": "Missing item type\n*\n Author    :  Timo                                                            *\n Version   :  5.0.2.2                                                         *\n Date      :  11 September 2013                                               *\n*\n This is a translation of the C# Clipper library to Javascript.               *\n Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n Because Javascript lacks support for 64-bit integers, the space              *\n is a little more restricted than in C# version.                              *\n*\n C# version has support for coordinate space:                                 *\n +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n while Javascript version has support for space:                              *\n +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*\n Tom Wu's JSBN proved to be the fastest big integer library:                  *\n http://jsperf.com/big-integer-library-test                                   *\n*\n This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*",
            "line": " libs/clipper_unminified.js:34"
        },
        {
            "message": "Missing item type\n*\n Basic JavaScript BN library - subset useful for RSA encryption.              *\n http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n Copyright (c) 2005  Tom Wu                                                   *\n All Rights Reserved.                                                         *\n See \"LICENSE\" for details:                                                   *\n http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*",
            "line": " libs/clipper_unminified.js:57"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1157"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1177"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1186"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1207"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1221"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1250"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1261"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1272"
        },
        {
            "message": "Missing item type\nDetect xml",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1294"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1308"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1718"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " visualizations/FacetScape/lib/jquery-2.0.3.js:1747"
        },
        {
            "message": "Missing item type\nBar event handlers",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:26"
        },
        {
            "message": "Missing item type\nLegend events' handlers",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:82"
        },
        {
            "message": "Missing item type\nEntry method. Sets canvas dimensions and initial input.\n\tDraws main svg components (svg, focus & context), defines scales and axis.",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:142"
        },
        {
            "message": "Missing item type\nDefine canvas dimensions",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:151"
        },
        {
            "message": "Missing item type\nDefine input variables",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:162"
        },
        {
            "message": "Missing item type\nDefine scales",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:174"
        },
        {
            "message": "Missing item type\nDefine axis functions",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:190"
        },
        {
            "message": "Missing item type\nDraw main components",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:198"
        },
        {
            "message": "Missing item type\nAdd focus and context g components",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:212"
        },
        {
            "message": "Missing item type\nDraw elements in focus area",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:221"
        },
        {
            "message": "Missing item type\nLegends",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:250"
        },
        {
            "message": "Missing item type\nReusable function. Invoked either from 'draw' or 'redraw'",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:287"
        },
        {
            "message": "Missing item type\nHighlight bar and color legend selected",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:333"
        },
        {
            "message": "Missing item type\nReset barchart",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:392"
        },
        {
            "message": "Missing item type\nReset barchart",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:405"
        },
        {
            "message": "Missing item type\nClear selected bar and legend when a list item is clickend on in vis-template",
            "line": " visualizations/Vis-Template/Barchart/barchart.js:425"
        },
        {
            "message": "Missing item type\nDraw GEO vis",
            "line": " visualizations/Vis-Template/Geochart/geochart.js:93"
        },
        {
            "message": "Missing item type\nDefine canvas dimensions",
            "line": " visualizations/Vis-Template/Geochart/geochart.js:102"
        },
        {
            "message": "Missing item type\nDefine input variables",
            "line": " visualizations/Vis-Template/Geochart/geochart.js:116"
        },
        {
            "message": "Missing item type\nReset GEO  vis",
            "line": " visualizations/Vis-Template/Geochart/geochart.js:323"
        },
        {
            "message": "Missing item type\nHighlight items",
            "line": " visualizations/Vis-Template/Geochart/geochart.js:338"
        },
        {
            "message": "Missing item type\nCalculate node radius according to current extent",
            "line": " visualizations/Vis-Template/Timeline/js/geometry.js:14"
        },
        {
            "message": "Missing item type\nCalculates x-offset for text attached to refnodes",
            "line": " visualizations/Vis-Template/Timeline/js/geometry.js:32"
        },
        {
            "message": "Missing item type\nCalculates y-offset for text attached to refnodes",
            "line": " visualizations/Vis-Template/Timeline/js/geometry.js:47"
        },
        {
            "message": "Missing item type\nCalculates offset for keyword nodes",
            "line": " visualizations/Vis-Template/Timeline/js/geometry.js:64"
        },
        {
            "message": "Missing item type\nSteps executed when the timeline is intialized",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:4"
        },
        {
            "message": "Missing item type\nDefine line function to connect nodes in focus area",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:30"
        },
        {
            "message": "Missing item type\nBrush brushed and brushended",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:58"
        },
        {
            "message": "Missing item type\nZoom zoomed",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:102"
        },
        {
            "message": "Missing item type\nNode click handler",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:134"
        },
        {
            "message": "Missing item type\nDraw lines linking nodes in focus area",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:164"
        },
        {
            "message": "Missing item type\nNode mouseover handler",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:186"
        },
        {
            "message": "Missing item type\nNode mouseout handler",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:234"
        },
        {
            "message": "Missing item type\nKeyword nodes' handlers",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:264"
        },
        {
            "message": "Missing item type\nLegend events' handlers",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:288"
        },
        {
            "message": "Missing item type\nDraw function called from Vis-Template every time the visual channels or the data change",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:395"
        },
        {
            "message": "Missing item type\nDefine canvas dimensions",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:403"
        },
        {
            "message": "Missing item type\nAssign visual channels and processed data",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:417"
        },
        {
            "message": "Missing item type\nDefine scales",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:431"
        },
        {
            "message": "Missing item type\nDefine axis",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:465"
        },
        {
            "message": "Missing item type\nDefine behaviors",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:487"
        },
        {
            "message": "Missing item type\nDraw chart main components",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:507"
        },
        {
            "message": "Missing item type\nDraw axis in focus area",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:556"
        },
        {
            "message": "Missing item type\nDraw in focus area",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:588"
        },
        {
            "message": "Missing item type\nMain nodes",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:592"
        },
        {
            "message": "Missing item type\nLegends",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:681"
        },
        {
            "message": "Missing item type\nDraw in context area (brush)",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:714"
        },
        {
            "message": "Missing item type\nMethod called when a node is clicked. Displays a small green node for each keyword related to the node item,\n\tthe links connecting them and te corresponding text",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:774"
        },
        {
            "message": "Missing item type\nRedraw nodes, lines and main x axis",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:844"
        },
        {
            "message": "Missing item type\nReset chart's elements",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:898"
        },
        {
            "message": "Missing item type\nRemove links, keyword nodes and restore main nodes' style",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:930"
        },
        {
            "message": "Missing item type\nNodes can be highlighted from the Vis-Template though the following function",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:965"
        },
        {
            "message": "Missing item type\nNodes can be selected from the Vis-Template by indicating a single index or an array of indices",
            "line": " visualizations/Vis-Template/Timeline/timeline.js:1039"
        },
        {
            "message": "Missing item type\nDropdown list",
            "line": " visualizations/Vis-Template/js/accordion-and-dropdown.js:2"
        },
        {
            "message": "Missing item type\nAccordion with drop-down lists",
            "line": " visualizations/Vis-Template/js/accordion-and-dropdown.js:85"
        },
        {
            "message": "Missing item type\nColorpicker",
            "line": " visualizations/Vis-Template/js/colorpicker.js:2"
        },
        {
            "message": "Missing item type\nDIMENSIONS",
            "line": " visualizations/Vis-Template/js/settings.js:8"
        },
        {
            "message": "Missing item type\nDIMENSIONS processing",
            "line": " visualizations/Vis-Template/js/settings.js:26"
        },
        {
            "message": "Missing item type\nINITDATA",
            "line": " visualizations/Vis-Template/js/settings.js:79"
        },
        {
            "message": "Missing item type\nINITDATA processing",
            "line": " visualizations/Vis-Template/js/settings.js:94"
        },
        {
            "message": "Missing item type\nparsing functions",
            "line": " visualizations/Vis-Template/js/utils.js:2"
        },
        {
            "message": "Missing item type\nArray prototype",
            "line": " visualizations/Vis-Template/js/utils.js:48"
        },
        {
            "message": "Missing item type\nString prototype",
            "line": " visualizations/Vis-Template/js/utils.js:95"
        },
        {
            "message": "Missing item type\njQuery functions (for DOM elements)",
            "line": " visualizations/Vis-Template/js/utils.js:110"
        },
        {
            "message": "Missing item type\n************************************************************************************************************************************************",
            "line": " visualizations/Vis-Template/starter.js:98"
        },
        {
            "message": "Missing item type\nSTART object is returned to starter so it can call init or redresh upon new results received",
            "line": " visualizations/Vis-Template/vis.js:97"
        },
        {
            "message": "Missing item type\nInitizialization function called from starter.js\nSets up the visualization-independent components and instantiates the visualization objects (e.g. timeVis)",
            "line": " visualizations/Vis-Template/vis.js:104"
        },
        {
            "message": "Missing item type\nInitizialization function called from starter.js\nSets up the visualization-independent components and instantiates the visualization objects (e.g. timeVis)",
            "line": " visualizations/Vis-Template/vis.js:132"
        },
        {
            "message": "Missing item type\nBind event handlers to buttons\n$",
            "line": " visualizations/Vis-Template/vis.js:180"
        },
        {
            "message": "Missing item type\nFormat the received mapping combinations so they can be more easily manipulated",
            "line": " visualizations/Vis-Template/vis.js:194"
        },
        {
            "message": "Missing item type\nUpdates the text in the center of the header according to the received paramter",
            "line": " visualizations/Vis-Template/vis.js:324"
        },
        {
            "message": "Missing item type\nUpdates search field on the header (on left side for the moment)",
            "line": " visualizations/Vis-Template/vis.js:340"
        },
        {
            "message": "Missing item type\nClick on search button triggers a new search",
            "line": " visualizations/Vis-Template/vis.js:367"
        },
        {
            "message": "Missing item type\nChart <select> changed",
            "line": " visualizations/Vis-Template/vis.js:376"
        },
        {
            "message": "Missing item type\nFunction that wraps the change event handlers. These events are triggered by the <select> elements (chart and visual channels)",
            "line": " visualizations/Vis-Template/vis.js:385"
        },
        {
            "message": "Missing item type",
            "line": " visualizations/Vis-Template/vis.js:433"
        },
        {
            "message": "Missing item type",
            "line": " visualizations/Vis-Template/vis.js:462"
        },
        {
            "message": "Missing item type\nCreates the <select> element to chose the type of visualization (chart)",
            "line": " visualizations/Vis-Template/vis.js:510"
        },
        {
            "message": "Missing item type\nCreated one <select> element per visual channel\nIt is executed every time the chart selection changes",
            "line": " visualizations/Vis-Template/vis.js:532"
        },
        {
            "message": "Missing item type\nUpdate visual channels' <select> elements according to mapping combination received as parameter",
            "line": " visualizations/Vis-Template/vis.js:629"
        },
        {
            "message": "Missing item type\nCalculates the index to scroll to, which depends on the existence or abscence of a ranking\nThere exists a ranking if dataRanking.length > 0",
            "line": " visualizations/Vis-Template/vis.js:656"
        },
        {
            "message": "Missing item type\nFunction that populates the list on the right side of the screen.\nEach item represents one recommendation contained in the variable \"data\"",
            "line": " visualizations/Vis-Template/vis.js:673"
        },
        {
            "message": "Missing item type\nDraws legend color icons in each content list item",
            "line": " visualizations/Vis-Template/vis.js:763"
        },
        {
            "message": "Missing item type\nDraws legend color icons in each content list item",
            "line": " visualizations/Vis-Template/vis.js:790"
        },
        {
            "message": "Missing item type\nFunction that highlights items on the content list, according to events happening on the visualization.\nE.g. when one or more keywords are selected, the matching list items remain highlighted, while the others become translucid\nIf no parameters are received, all the list items are restored to the default opacity",
            "line": " visualizations/Vis-Template/vis.js:823"
        },
        {
            "message": "Missing item type\nSets the chart and the mapping combination to be used, acording to the <select> elements' selected values",
            "line": " visualizations/Vis-Template/vis.js:892"
        },
        {
            "message": "Missing item type\nChecks if the mapping combination is valid. If not, it returns a valid one and calls\nthe method to change the visual attributes' selected values in the corresponding <select> elements",
            "line": " visualizations/Vis-Template/vis.js:938"
        },
        {
            "message": "Missing item type\nchartName = name of the chart currently displayed",
            "line": " visualizations/Vis-Template/vis.js:983"
        },
        {
            "message": "Missing item type\nClears the visualization and specific controls areas.\nRetrieves the selected chart and the appropriate mapping combination\nCalls the \"draw\" function corresponding to the selected chart",
            "line": " visualizations/Vis-Template/vis.js:991"
        },
        {
            "message": "Missing item type",
            "line": " visualizations/bookmarkingAPI.js:40"
        },
        {
            "message": "Missing item type",
            "line": " visualizations/bookmarkingAPI.js:198"
        },
        {
            "message": "Missing item type",
            "line": " visualizations/bookmarkingAPI.js:243"
        },
        {
            "message": "Missing item type\nUpdates the widget's view with the current state of the model in the background script",
            "line": " widget/widget.js:5"
        },
        {
            "message": "Missing item type\nInitializes the widget's view with the current state of the widget in the background script's model",
            "line": " widget/widget.js:24"
        },
        {
            "message": "Missing item type\nFlag for indicating the widget's current visibility state",
            "line": " content.js:2"
        },
        {
            "message": "Missing item type\nChanges the widget's visibility to the provided value.\nWhen the widget is to be shown, the width of the current page is reduced\nby the widget's width and the widget is displayed at the right border.\nUpon hiding the widget, the size limits for the current page are reset.",
            "line": " content.js:9"
        }
    ]
}