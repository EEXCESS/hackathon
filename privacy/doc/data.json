{
    "project": {},
    "files": {
        "common.js": {
            "name": "common.js",
            "modules": {},
            "classes": {
                "common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "constants.js": {
            "name": "constants.js",
            "modules": {},
            "classes": {
                "constants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "interests.js": {
            "name": "interests.js",
            "modules": {},
            "classes": {
                "interests": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "languages.js": {
            "name": "languages.js",
            "modules": {},
            "classes": {
                "languages": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "obfuscation.js": {
            "name": "obfuscation.js",
            "modules": {},
            "classes": {
                "obfuscation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "policy.js": {
            "name": "policy.js",
            "modules": {},
            "classes": {
                "policy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "profile.js": {
            "name": "profile.js",
            "modules": {},
            "classes": {
                "profile": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "storage.js": {
            "name": "storage.js",
            "modules": {},
            "classes": {
                "storage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "util-html.js": {
            "name": "util-html.js",
            "modules": {},
            "classes": {
                "util-html": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "common": {
            "name": "common",
            "shortname": "common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "common.js",
            "line": 1,
            "description": "Provides methods to initialize, retrieve or display elements."
        },
        "constants": {
            "name": "constants",
            "shortname": "constants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "constants.js",
            "line": 1,
            "description": "Defines all the constants used in the module profile."
        },
        "interests": {
            "name": "interests",
            "shortname": "interests",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "interests.js",
            "line": 1,
            "description": "Provides methods to manage the interests."
        },
        "languages": {
            "name": "languages",
            "shortname": "languages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "languages.js",
            "line": 1,
            "description": "Provides methods to manage the languages."
        },
        "obfuscation": {
            "name": "obfuscation",
            "shortname": "obfuscation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "obfuscation.js",
            "line": 1,
            "description": "Provides methods that implements obfuscation and filtering mechanisms."
        },
        "policy": {
            "name": "policy",
            "shortname": "policy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "policy.js",
            "line": 1,
            "description": "Provides methods to manage policy privacy."
        },
        "profile": {
            "name": "profile",
            "shortname": "profile",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "profile.js",
            "line": 1,
            "description": "Provides ... TODO"
        },
        "storage": {
            "name": "storage",
            "shortname": "storage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "storage.js",
            "line": 1,
            "description": "Provides methods to manage the storage of data."
        },
        "util-html": {
            "name": "util-html",
            "shortname": "util-html",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "util-html.js",
            "line": 1,
            "description": "Provides methods handle HTML element/code."
        }
    },
    "classitems": [
        {
            "file": "common.js",
            "line": 6,
            "description": "Returns all the text input elements of class CLASS_TEXT.",
            "itemtype": "method",
            "name": "getTextInputs",
            "return": {
                "description": "list of elements.",
                "type": "NodeList"
            },
            "class": "common"
        },
        {
            "file": "common.js",
            "line": 15,
            "description": "Initializes the text input elements of the form. \nValues are taken from the data store.",
            "itemtype": "method",
            "name": "initTextInputs",
            "class": "common"
        },
        {
            "file": "common.js",
            "line": 32,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "clas",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "elementListener",
            "class": "common"
        },
        {
            "file": "common.js",
            "line": 48,
            "description": "Display all the elements.",
            "params": [
                {
                    "name": "elements",
                    "description": "",
                    "type": "NodeList"
                }
            ],
            "itemtype": "method",
            "name": "displayElements",
            "class": "common"
        },
        {
            "file": "common.js",
            "line": 60,
            "description": "Display the element according to the privacy level.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "displayElement",
            "class": "common"
        },
        {
            "file": "constants.js",
            "line": 6,
            "itemtype": "attribute",
            "name": "STORAGE_PREFIX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 11,
            "itemtype": "attribute",
            "name": "ADD_LANGUAGE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 15,
            "itemtype": "attribute",
            "name": "REMOVE_LANGUAGE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 19,
            "itemtype": "attribute",
            "name": "ADD_INTEREST",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 23,
            "itemtype": "attribute",
            "name": "REMOVE_INTEREST",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 28,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_GREY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 32,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_GREEN",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 36,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_ORANGE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 40,
            "itemtype": "attribute",
            "name": "BUTTON_STYLE_RED",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 45,
            "itemtype": "attribute",
            "name": "INPUT_SUFFIX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 49,
            "itemtype": "attribute",
            "name": "DISPLAY_SUFFIX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 53,
            "itemtype": "attribute",
            "name": "POLICY_SUFFIX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 58,
            "itemtype": "attribute",
            "name": "PARENT_ID",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 63,
            "itemtype": "attribute",
            "name": "NAME",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 67,
            "itemtype": "attribute",
            "name": "COUNTRY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 71,
            "itemtype": "attribute",
            "name": "CITY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 75,
            "itemtype": "attribute",
            "name": "LOCATION",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 79,
            "itemtype": "attribute",
            "name": "BIRTHDATE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 83,
            "itemtype": "attribute",
            "name": "LANGUAGE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 87,
            "itemtype": "attribute",
            "name": "LANGUAGES",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 91,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 96,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 100,
            "itemtype": "attribute",
            "name": "INTEREST",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 104,
            "itemtype": "attribute",
            "name": "INTERESTS",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 109,
            "itemtype": "attribute",
            "name": "CLASS_TEXT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 113,
            "itemtype": "attribute",
            "name": "CLASS_DATE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 117,
            "itemtype": "attribute",
            "name": "CLASS_LANGUAGE",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 121,
            "itemtype": "attribute",
            "name": "CLASS_INTEREST",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 125,
            "itemtype": "attribute",
            "name": "CLASS_BUTTON",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 129,
            "itemtype": "attribute",
            "name": "CLASS_BUTTON_GROUP",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 134,
            "description": "List of european languages: Bulgarian, Czech, Danish, Dutch, English, Estonian, etc.",
            "itemtype": "attribute",
            "name": "TAB_LANGUAGE_LABELS",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 141,
            "description": "List of skill level (Fluent, Intermediate, Basic knowledge).",
            "itemtype": "attribute",
            "name": "TAB_LANGUAGE_SKILLS",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 147,
            "description": "The default language is English (TAB_LANGUAGE_LABELS[4]).",
            "itemtype": "attribute",
            "name": "DEFAULT_LANGUAGE_LABEL_INDEX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 152,
            "description": "The default skill level is Fluent (TAB_LANGUAGE_SKILLS[0]).",
            "itemtype": "attribute",
            "name": "DEFAULT_LANGUAGE_SKILL_INDEX",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 157,
            "itemtype": "attribute",
            "name": "DEFAULT_POLICY_LEVEL",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 161,
            "itemtype": "attribute",
            "name": "MAX_POLICY_THRESHOLD",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 167,
            "itemtype": "attribute",
            "name": "NAME_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 171,
            "itemtype": "attribute",
            "name": "COUNTRY_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 175,
            "itemtype": "attribute",
            "name": "CITY_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 179,
            "itemtype": "attribute",
            "name": "BIRTHDATE_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 183,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 187,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 191,
            "itemtype": "attribute",
            "name": "INTEREST_INPUT",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 197,
            "itemtype": "attribute",
            "name": "NAME_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 201,
            "itemtype": "attribute",
            "name": "COUNTRY_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 205,
            "itemtype": "attribute",
            "name": "CITY_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 209,
            "itemtype": "attribute",
            "name": "BIRTHDATE_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 213,
            "itemtype": "attribute",
            "name": "LANGUAGE_LABEL_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 217,
            "itemtype": "attribute",
            "name": "LANGUAGE_SKILL_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 221,
            "itemtype": "attribute",
            "name": "INTEREST_DISPLAY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 227,
            "itemtype": "attribute",
            "name": "NAME_POLICY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 231,
            "itemtype": "attribute",
            "name": "LOCATION_POLICY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 235,
            "itemtype": "attribute",
            "name": "BIRTHDATE_POLICY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 239,
            "itemtype": "attribute",
            "name": "LANGUAGE_POLICY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 243,
            "itemtype": "attribute",
            "name": "INTEREST_POLICY",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 249,
            "description": "List of all the input elements (e.g., birthDateInput).",
            "itemtype": "attribute",
            "name": "INPUTS",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 254,
            "description": "List of all the display element (e.g., birthDateDisplay). \nA value can be null if the corresponding input is never displayed (e.g., nameInput).",
            "itemtype": "attribute",
            "name": "DISPLAYS",
            "class": "constants"
        },
        {
            "file": "constants.js",
            "line": 260,
            "description": "List of all the policy elements (e.g., birthDatePolicy). \nA value can appear multiple times when several input values depend on the same button (e.g., countryInput and cityInput).",
            "itemtype": "attribute",
            "name": "POLICIES",
            "class": "constants"
        },
        {
            "file": "interests.js",
            "line": 6,
            "itemtype": "method",
            "name": "getInterestInputs",
            "return": {
                "description": "list of interest inputs.",
                "type": "ListNode"
            },
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 14,
            "description": "Initializes the interests with the values from the data store. \nIt generates the HTML code, initializes the TagIt fields, adds the listeners and initializes the buttons.",
            "itemtype": "method",
            "name": "initInterests",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 41,
            "description": "Adds an interest: generates the HTML code, adds the listeners, initializes the buttons, saves the interests and update the listeners.",
            "itemtype": "method",
            "name": "addNewInterest",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 71,
            "description": "Initializes an interest (instantiate the TagIt field).",
            "params": [
                {
                    "name": "interestId",
                    "description": "identifier of an interest.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "initInterest",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 88,
            "description": "Create the listeners for a TagIt field.",
            "params": [
                {
                    "name": "interestId",
                    "description": "identifier of an interest.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "createInterestListener",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 111,
            "description": "Updates the listeners for all the interests: \nTagIt field listeners, listener for the removal of an interest, and buttons listeners.",
            "itemtype": "method",
            "name": "updateInterestListeners",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 133,
            "description": "Generate the HTML code to insert a new interest.",
            "params": [
                {
                    "name": "index",
                    "description": "Index of the interest to add.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "HTML code.",
                "type": "String"
            },
            "itemtype": "method",
            "name": "generateCodeInterest",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 168,
            "description": "Saves all the interests: extract the values from the form and store it in the data store.",
            "itemtype": "method",
            "name": "saveInterests",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 186,
            "description": "Adds a topic to an interest (added only if it's not already contained).",
            "params": [
                {
                    "name": "interests",
                    "description": "Array of interests.",
                    "type": "Array"
                },
                {
                    "name": "interestId",
                    "description": "Identifier of the interest to be updated.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "Label of the new topic.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of interests containing \"label\".",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "addTopic",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 210,
            "description": "Removes a topic for an interest.",
            "params": [
                {
                    "name": "interests",
                    "description": "Array of interests.",
                    "type": "Array"
                },
                {
                    "name": "interestId",
                    "description": "Identifier of the interest to be updated.",
                    "type": "String"
                },
                {
                    "name": "label",
                    "description": "Label of the topic to be removed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array of interests without \"label\".",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "removeTopic",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 232,
            "description": "Removes the listener assigned to a link. \nThis method is used when an interest is removed to make sure the removal is done properly. \nIt resets the policy level, remove the HTML code, and save the interests.",
            "params": [
                {
                    "name": "link",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeInterestListener",
            "class": "interests"
        },
        {
            "file": "interests.js",
            "line": 245,
            "description": "Listener invoked when an interest must be added.",
            "itemtype": "method",
            "name": "addInterestListener",
            "class": "interests"
        },
        {
            "file": "languages.js",
            "line": 6,
            "description": "TODO",
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getLanguageSelects",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 15,
            "description": "TODO",
            "itemtype": "method",
            "name": "initLanguages",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 31,
            "description": "TODO",
            "itemtype": "method",
            "name": "addNewLanguage",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 49,
            "description": "TODO",
            "itemtype": "method",
            "name": "updateLanguageListeners",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 74,
            "description": "TODO",
            "params": [
                {
                    "name": "index",
                    "description": ""
                },
                {
                    "name": "label",
                    "description": ""
                },
                {
                    "name": "skill",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "generateCodeLanguage",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 143,
            "description": "TODO",
            "itemtype": "method",
            "name": "saveLanguages",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 170,
            "description": "TODO",
            "params": [
                {
                    "name": "link",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeLanguageListener",
            "class": "languages"
        },
        {
            "file": "languages.js",
            "line": 181,
            "description": "TODO",
            "itemtype": "method",
            "name": "addLanguageListener",
            "class": "languages"
        },
        {
            "file": "obfuscation.js",
            "line": 6,
            "description": "TODO",
            "params": [
                {
                    "name": "field",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurField",
            "class": "obfuscation"
        },
        {
            "file": "obfuscation.js",
            "line": 49,
            "description": "TODO",
            "params": [
                {
                    "name": "birthdate",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "level",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurBirthdate",
            "class": "obfuscation"
        },
        {
            "file": "obfuscation.js",
            "line": 72,
            "description": "TODO",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "level",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "threshold",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "blurValue",
            "class": "obfuscation"
        },
        {
            "file": "policy.js",
            "line": 6,
            "description": "TODO",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "itemtype": "method",
            "name": "getButtonGroups",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 15,
            "description": "TODO",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "itemtype": "method",
            "name": "getButtons",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 25,
            "description": "TODO",
            "itemtype": "method",
            "name": "initButtons",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 36,
            "description": "TODO",
            "params": [
                {
                    "name": "buttonGroup",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "initButtonGroup",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 75,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "updateButton",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 110,
            "description": "TODO",
            "params": [
                {
                    "name": "buttonGroup",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "Integer"
            },
            "itemtype": "method",
            "name": "getPolicyLevel",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 128,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Element"
                }
            ],
            "itemtype": "method",
            "name": "policyButtonListener",
            "class": "policy"
        },
        {
            "file": "policy.js",
            "line": 145,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "typePolicy",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "defaultPolicyLevel",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "itemtype": "method",
            "name": "resetElementPolicy",
            "class": "policy"
        },
        {
            "file": "profile.js",
            "line": 50,
            "description": "TODO",
            "itemtype": "method",
            "name": "init",
            "class": "profile"
        },
        {
            "file": "profile.js",
            "line": 61,
            "description": "TODO",
            "itemtype": "method",
            "name": "display",
            "class": "profile"
        },
        {
            "file": "profile.js",
            "line": 71,
            "description": "TODO",
            "itemtype": "method",
            "name": "createListeners",
            "class": "profile"
        },
        {
            "file": "storage.js",
            "line": 6,
            "description": "TODO",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "getStoredValue",
            "class": "storage"
        },
        {
            "file": "storage.js",
            "line": 17,
            "description": "TODO",
            "params": [
                {
                    "name": "id",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "storeValue",
            "class": "storage"
        },
        {
            "file": "storage.js",
            "line": 27,
            "description": "TODO",
            "params": [
                {
                    "name": "inputElement",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "saveInput",
            "class": "storage"
        },
        {
            "file": "storage.js",
            "line": 37,
            "description": "TODO",
            "params": [
                {
                    "name": "button",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "saveButton",
            "class": "storage"
        },
        {
            "file": "storage.js",
            "line": 53,
            "description": "TODO",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getStoredJson",
            "class": "storage"
        },
        {
            "file": "util-html.js",
            "line": 6,
            "description": "Gets all the links having `tag' in the class attribute.",
            "params": [
                {
                    "name": "tag",
                    "description": "Value of the tag (e.g., `removeLanguageremoveLanguage')",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of elements.",
                "type": "ListNode"
            },
            "itemtype": "method",
            "name": "getRemoveLinks",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 25,
            "description": "Gets the element corresponding to the display of another element. \nFor instance, getDisplayElementFromElement(\"countryInput\") returns \"countryDisplay\". \nThe returned value can be null.",
            "params": [
                {
                    "name": "element",
                    "description": "An input or policy element.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "A display element corresponding to the input or policy element.",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "getDisplayElementFromElement",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 37,
            "description": "Gets the element corresponding to the policy of another element. \nFor instance, getPolicyElementFromElement(\"countryInput\") returns \"locationPolicy\".",
            "params": [
                {
                    "name": "element",
                    "description": "An input (or display) element.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "A policy element corresponding to the input (or display) element.",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "getPolicyElementFromElement",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 48,
            "description": "TODO",
            "params": [
                {
                    "name": "inputElement",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "array",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": ""
            },
            "itemtype": "method",
            "name": "getElementFromElement",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 72,
            "description": "Gets the element identifier corresponding to an identifier.",
            "params": [
                {
                    "name": "id",
                    "description": "Identifier of the element to be retrieved (e.g., \"cityInput\", \"locationPolicy\").",
                    "type": "String"
                },
                {
                    "name": "array",
                    "description": "Array in which the element must be searched (e.g., DISPLAYS).",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Identifier of the element retrieved from \"id\".",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getElementIdFromId",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 99,
            "description": "Determines if a string ends with a number.",
            "params": [
                {
                    "name": "str",
                    "description": "String to be analyzed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if the \"str\" ends with a number; False otherwise.",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "endsWithNumber",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 109,
            "description": "Extracts the number ending a string.",
            "params": [
                {
                    "name": "str",
                    "description": "String to be analyzed (e.g., \"id123\").",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number ending the string (e.g., 123).",
                "type": "Integer"
            },
            "itemtype": "method",
            "name": "extractEndingNumber",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 119,
            "description": "TODO",
            "params": [
                {
                    "name": "policyElement",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getInputElementsFromPolicyElement",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 145,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeClass",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 156,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "className",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "addClass",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 169,
            "description": "TODO",
            "params": [
                {
                    "name": "removeElement",
                    "description": ""
                },
                {
                    "name": "type",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeElement",
            "class": "util-html"
        },
        {
            "file": "util-html.js",
            "line": 182,
            "description": "TODO",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "type",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "updateHtml",
            "class": "util-html"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " interests.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " interests.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " interests.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " interests.js:210"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " languages.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " languages.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " obfuscation.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " obfuscation.js:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " obfuscation.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " policy.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " policy.js:15"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " policy.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " storage.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:99"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:109"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " util-html.js:119"
        }
    ]
}